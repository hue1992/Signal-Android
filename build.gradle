import java.security.MessageDigest

buildscript {
    repositories {
        jcenter()
        google()
        maven {
            url "https://repo1.maven.org/maven2"
            jcenter()
        }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        classpath files('libs/gradle-witness.jar')
        classpath 'com.google.gms:google-services:4.0.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'witness'

repositories {
//    maven {
//        url "https://raw.github.com/signalapp/maven/master/circular-progress-button/releases/"
//    }
//    maven {
//        url "https://raw.github.com/signalapp/maven/master/sqlcipher/release/"
//    }
    maven {
        url "https://maven.google.com"
    }
    maven { // textdrawable
        url 'https://dl.bintray.com/amulyakhare/maven'
    }
    jcenter()
    mavenLocal()
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
    maven { url "https://jitpack.io" }
}

dependencies {
    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v13'
    }
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v13:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:preference-v7:27.1.1'
    implementation 'com.android.support:preference-v14:27.1.1'
    implementation 'com.android.support:gridlayout-v7:27.1.1'
    implementation "com.android.support:exifinterface:27.1.1"
    implementation 'com.android.support:multidex:1.0.2'
    implementation "android.arch.lifecycle:extensions:1.1.1"

    implementation 'com.google.android.gms:play-services-gcm:9.6.1'
    implementation 'com.google.android.gms:play-services-maps:9.6.1'
    implementation 'com.google.android.gms:play-services-places:9.6.1'

    implementation 'com.google.android.exoplayer:exoplayer:r2.3.1'

    //SIGNAL SEVICES
//    implementation('org.whispersystems:libpastelog:1.1.2') {
//        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
//    }
    implementation group: 'org.whispersystems', name: 'libpastelog', version: '1.1.2'
    implementation 'org.whispersystems:signal-service-android:2.7.6'
    implementation 'org.whispersystems:webrtc-android:M67'
    implementation group: 'org.whispersystems', name: 'signal-protocol-android', version: '2.6.2'
    //SIGNAL SEVICES

    implementation "me.leolin:ShortcutBadger:1.1.16"
    implementation 'se.emilsjolander:stickylistheaders:2.7.0'
    implementation 'com.jpardogo.materialtabstrip:library:1.0.9'
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5'
    implementation 'com.github.chrisbanes:PhotoView:2.1.4'
    implementation 'com.github.bumptech.glide:glide:4.5.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'
    implementation 'com.makeramen:roundedimageview:2.1.0'
    implementation 'com.pnikosis:materialish-progress:1.5'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'pl.tajchert:waitingdots:0.1.0'
    implementation 'com.soundcloud.android:android-crop:0.9.10@aar'
    implementation 'com.melnykov:floatingactionbutton:1.3.0'
    implementation 'com.google.zxing:android-integration:3.1.0'
    implementation 'com.squareup.dagger:dagger:1.2.2'
    annotationProcessor 'com.squareup.dagger:dagger-compiler:1.2.2'
    implementation 'mobi.upod:time-duration-picker:1.1.3'
    compileOnly 'com.squareup.dagger:dagger-compiler:1.2.2'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'com.google.zxing:core:3.2.1'
    implementation('com.davemorrissey.labs:subsampling-scale-image-view:3.6.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation('cn.carbswang.android:NumberPickerView:1.0.9') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation('com.tomergoldst.android:tooltips:1.0.6') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation('com.klinkerapps:android-smsmms:4.0.1') {
        exclude group: 'com.squareup.okhttp', module: 'okhttp'
        exclude group: 'com.squareup.okhttp', module: 'okhttp-urlconnection'
    }
    implementation 'com.annimon:stream:1.1.8'
    implementation('com.takisoft.fix:colorpicker:0.9.1') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation 'com.codewaves.stickyheadergrid:stickyheadergrid:0.9.4'
    implementation group: 'com.github.dmytrodanylyk.circular-progress-button', name: 'library', version: '1.1.3'
    implementation('com.googlecode.ez-vcard:ez-vcard:0.9.11') {
        exclude group: 'com.fasterxml.jackson.core'
        exclude group: 'org.freemarker'
    }

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:1.7.1'
    testImplementation 'org.mockito:mockito-core:1.9.5'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.1'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.1'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.1'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.1'

    androidTestImplementation 'com.android.support:multidex:1.0.2'
    androidTestImplementation 'com.android.support:multidex-instrumentation:1.0.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation('org.assertj:assertj-core:1.7.1') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    androidTestImplementation('com.squareup.assertj:assertj-android:1.1.1') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-auth:16.0.3'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.google.firebase:firebase-messaging:17.3.1'

//    sqlcipher
    implementation group: 'net.zetetic', name: 'android-database-sqlcipher', version: '3.5.9'
}

android {
    flavorDimensions "none"
    compileSdkVersion 27
    buildToolsVersion '28.0.0-rc1'
    useLibrary 'org.apache.http.legacy'

    dexOptions {
        javaMaxHeapSize "4g"
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        versionCode 1
        versionName "1.1"

        minSdkVersion 21
        targetSdkVersion 25
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true
        project.ext.set("archivesBaseName", "Signal");

        buildConfigField "long", "BUILD_TIMESTAMP", getLastCommitTimestamp() + "L"
        buildConfigField "String", "SIGNAL_URL", "\"https://signal.giyf.vn:8443\""
        buildConfigField "String", "SIGNAL_CDN_URL", "\"https://signal.giyf.vn:8443\""
        buildConfigField "String", "SIGNAL_SERVICE_STATUS_URL", "\"uptime.signal.org\""
        buildConfigField "String", "GIPHY_PROXY_HOST", "\"giphy-proxy-production.whispersystems.org\""
        buildConfigField "int", "GIPHY_PROXY_PORT", "80"
        buildConfigField "String", "USER_AGENT", "\"OWA\""
        buildConfigField "boolean", "DEV_BUILD", "true"

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
        release {
            minifyEnabled true
            proguardFiles = buildTypes.debug.proguardFiles
            signingConfig signingConfigs.release
        }


    }



    productFlavors {
        play {
            dimension "none"
            ext.websiteUpdateUrl = "null"
            buildConfigField "boolean", "PLAY_STORE_DISABLED", "false"
            buildConfigField "String", "NOPLAY_UPDATE_URL", "$ext.websiteUpdateUrl"
        }

        website {
            dimension "none"
            ext.websiteUpdateUrl = "https://updates.signal.org/android"
            buildConfigField "boolean", "PLAY_STORE_DISABLED", "true"
            buildConfigField "String", "NOPLAY_UPDATE_URL", "\"$ext.websiteUpdateUrl\""
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = outputFileName.replace(".apk", "-${variant.versionName}.apk")
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        androidTest {
            java.srcDirs = ['test/androidTest/java']
        }
        test {
            java.srcDirs = ['test/unitTest/java']
        }

        website.manifest.srcFile 'website/AndroidManifest.xml'
    }

    lintOptions {
        abortOnError false
    }
}

task assembleWebsiteDescriptor << {
    android.applicationVariants.all { variant ->
        if (variant.name.equals("websiteDebug") ||
                variant.name.equals("websiteRelease")) {
            File file = new File(variant.outputs[0].outputFile.path)

            if (file.exists()) {
                MessageDigest md = MessageDigest.getInstance("SHA-256");
                file.eachByte 4096, { bytes, size ->
                    md.update(bytes, 0, size);
                }

                String digest = md.digest().collect { String.format "%02x", it }.join();
                String url = variant.productFlavors.get(0).ext.websiteUpdateUrl
                String apkName = variant.outputs[0].outputFile.name

                String descriptor = "{" +
                        "\"versionCode\" : $project.android.defaultConfig.versionCode," +
                        "\"versionName\" : \"$project.android.defaultConfig.versionName\"," +
                        "\"sha256sum\" : \"$digest\"," +
                        "\"url\" : \"$url/$apkName\"" +
                        "}"

                File descriptorFile = new File(variant.outputs[0].outputFile.parent, apkName.replace(".apk", ".json"))

                descriptorFile.write(descriptor)
            }
        }
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        task.enabled = false
    }

    if (task.name.equals("assembleWebsiteDebug") ||
            task.name.equals("assembleWebsiteRelease")) {
        task.finalizedBy assembleWebsiteDescriptor
    }
}

def getLastCommitTimestamp() {
    new ByteArrayOutputStream().withStream { os ->
        def result = exec {
            executable = 'git'
            args = ['log', '-1', '--pretty=format:%ct']
            standardOutput = os
        }

        return os.toString() + "000"
    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_FILE') &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
apply plugin: 'com.google.gms.google-services'
